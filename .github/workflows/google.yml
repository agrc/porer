name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment:
      name: dev
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0

      - name: ⬇️ Set up code
        uses: actions/checkout@v2

      - name: 🐍 Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: setup.py

      - name: 🏗 Install conductor
        run: pip install .[tests,cloud-run]

      - name: 🧪 Run pytest
        run: pytest

      - id: auth
        name: 🗝️ Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.3.1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: ☁️ Setup gcloud
        run: |
          gcloud auth login --brief --cred-file=${{ steps.auth.outputs.credentials_file_path }}
          gcloud --quiet config set project ${{ secrets.PROJECT_ID }}

      - name: 🐳 Setup docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: Set short commit hash
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: 📦 Build image
        run: |-
          docker build \
            --tag gcr.io/${{ secrets.PROJECT_ID }}/conductor:$SHORT_SHA \
            --tag gcr.io/${{ secrets.PROJECT_ID }}/conductor:latest \
            .

      - name: 📤 Publish image
        run: |-
          docker push --all-tags gcr.io/${{ secrets.PROJECT_ID }}/conductor

      - name: ✏️ Update Cloud Run metadata
        working-directory: src
        run: |
          sed -i "s@{IMAGE}@gcr.io/${{ secrets.PROJECT_ID }}/conductor:$SHORT_SHA@g" cloud-run-deployment.yml
          sed -i "s!{SERVICE_ACCOUNT}!${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_NAME }}!g" cloud-run-deployment.yml
          sed -i "s@{VPC}@${{ secrets.VPC }}@g" cloud-run-deployment.yml

      - name: 🚀 Create cloud run revision
        run: |-
          gcloud run services replace ./src/cloud-run-deployment.yml \
            --platform managed --region us-central1

      - name: 🕰️ Create cloud scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list | grep conductor)" ]; then
            gcloud scheduler jobs create http conductor \
              --description="Trigger the conductor bot once a week on monday morning" \
              --schedule="0 9 * * 1" \
              --time-zone=America/Denver \
              --uri=$(gcloud run services describe conductor --region us-central1 --format 'value(status.url)') \
              --http-method=POST \
              --message-body="{\"now\":true}" \
              --max-retry-attempts=3 \
              --min-backoff=1m \
              --max-backoff=10m \
              --oidc-service-account-email=cloud-scheduler@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
              --quiet
          else
            gcloud scheduler jobs update http conductor \
              --description="Trigger the conductor bot once a week on monday morning" \
              --schedule="0 9 * * 1" \
              --time-zone=America/Denver \
              --uri=$(gcloud run services describe conductor --region us-central1 --format 'value(status.url)') \
              --http-method=POST \
              --message-body="{\"now\":true}" \
              --max-retry-attempts=3 \
              --min-backoff=1m \
              --max-backoff=10m \
              --oidc-service-account-email=cloud-scheduler@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
              --quiet
          fi

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.OS }}-python-${{ hashFiles('setup.py') }}

      - name: Install conductor
        run: pip install .[tests,cloud-run]

      - name: Test with pytest
        run: pytest

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure docker
        run: |-
          gcloud --quiet auth configure-docker

      - name: Set short commit hash
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build Image
        run: |-
          docker build \
            --tag gcr.io/$PROJECT_ID/conductor:$SHORT_SHA \
            --tag gcr.io/$PROJECT_ID/conductor:latest \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish Image
        run: |-
          docker push --all-tags gcr.io/$PROJECT_ID/conductor

      - name: Update Cloud Run metadata
        working-directory: src
        run: |
          sed -i "s@{IMAGE}@gcr.io/${{ secrets.PROJECT_ID }}/conductor:$SHORT_SHA@g" cloud-run-deployment.yml
          sed -i "s!{SERVICE_ACCOUNT}!${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_NAME }}!g" cloud-run-deployment.yml
          sed -i "s@{VPC}@${{ secrets.VPC }}@g" cloud-run-deployment.yml

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@main
        with:
          metadata: "./src/cloud-run-deployment.yml"
          credentials: ${{ secrets.SERVICE_ACCOUNT }}
